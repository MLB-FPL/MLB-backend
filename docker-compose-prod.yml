version: '3.8'

services:

  api1:
    build:
      context: ./backendProject
    container_name: mlb-api-1
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      mlb-redis1:
        condition: service_healthy
      mlb-elasticsearch:
        condition: service_healthy
      mlb-kafka:
        condition: service_healthy
    networks:
      - backend

  api2:
    build:
      context: ./backendProject
    container_name: mlb-api-2
    ports:
      - "8081:8080"
    env_file:
      - .env
    depends_on:
      mlb-redis1:
        condition: service_healthy
      mlb-elasticsearch:
        condition: service_healthy
      mlb-kafka:
        condition: service_healthy
    networks:
      - backend

  # Redis - 3 인스턴스
  mlb-redis1:
    image: redis:7.2
    container_name: mlb-redis1
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - backend

  mlb-redis2:
    image: redis:7.2
    container_name: mlb-redis2
    ports:
      - "6380:6379"
    networks:
      - backend

  mlb-redis3:
    image: redis:7.2
    container_name: mlb-redis3
    ports:
      - "6381:6379"
    networks:
      - backend

  # Elasticsearch
  mlb-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: mlb-elasticsearch
    environment:
      - node.name=es01
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      # TCP 열림 확인(의존 패키지 없이 동작)
      test: ["CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/9200'"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks:
      - backend

  # Zookeeper (for Kafka)
  mlb-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: mlb-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/2181'"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks:
      - backend

  # Kafka
  mlb-kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: mlb-kafka
    depends_on:
      - mlb-zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: mlb-zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://mlb-kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/9092'"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks:
      - backend

volumes:
  es_data:

networks:
  backend:
    driver: bridge
